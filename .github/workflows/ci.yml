name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsndfile1 ffmpeg portaudio19-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black pytest pytest-cov
        # Install minimal dependencies for testing
        pip install torch==2.0.1 torchaudio==2.0.2 --index-url https://download.pytorch.org/whl/cpu
        pip install transformers onnx onnxruntime
        pip install fastapi uvicorn pydantic streamlit
        pip install flask python-multipart requests pyttsx3
        pip install librosa soundfile sounddevice
        pip install -e .
      
    - name: Check directory structure
      run: |
        ls -la
        ls -la src/ || echo "src directory not found"
        ls -la tests/ || echo "tests directory not found"
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
    - name: Format check with black
      run: |
        black --check --diff .
      continue-on-error: true
        
    - name: Run unit tests
      run: |
        # Create necessary directories that might be expected by tests
        mkdir -p data/test_outputs
        mkdir -p temp
        mkdir -p uploads
        # Run tests
        python -m pytest tests/unit/ -v --no-header --no-summary
      continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Create .dockerignore
      run: |
        echo "models/*" > .dockerignore
        echo "venv/*" >> .dockerignore
        echo ".git/*" >> .dockerignore
        echo "**/__pycache__/*" >> .dockerignore
        
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: speech-assistant:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          SKIP_MODEL_DOWNLOAD=true 